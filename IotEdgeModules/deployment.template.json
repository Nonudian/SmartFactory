{
    "$schema-template": "2.0.0",
    "modulesContent": {
      "$edgeAgent": {
        "properties.desired": {
          "schemaVersion": "1.0",
          "runtime": {
            "type": "docker",
            "settings": {
              "minDockerVersion": "v1.25",
              "loggingOptions": "",
              "registryCredentials": {
                "docker": {
                  "username": "$CONTAINER_REGISTRY_USERNAME",
                  "password": "$CONTAINER_REGISTRY_PASSWORD",
                  "address": "$CONTAINER_REGISTRY_ADDRESS"
                }
              }
            }
          },
          "systemModules": {
            "edgeAgent": {
              "type": "docker",
              "env": {
                "UpstreamProtocol": {
                  "value": "Amqp"
                }
              },
              "settings": {
                "image": "mcr.microsoft.com/azureiotedge-agent:1.0",
                "createOptions": {}
              }
            },
            "edgeHub": {
              "type": "docker",
              "status": "running",
              "restartPolicy": "always",
              "env": {
                "OptimizeForPerformance": {
                  "value": "false"
                },
                "UpstreamProtocol": {
                  "value": "Amqp"
                }
              },
              "settings": {
                "image": "mcr.microsoft.com/azureiotedge-hub:1.0",
                "createOptions": {
                  "HostConfig": {
                    "PortBindings": {
                      "5671/tcp": [
                        {
                          "HostPort": "5671"
                        }
                      ],
                      "8883/tcp": [
                        {
                          "HostPort": "8883"
                        }
                      ],
                      "443/tcp": [
                        {
                          "HostPort": "443"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "modules": {
            "DataParser": {
              "version": "1.0",
              "type": "docker",
              "status": "running",
              "restartPolicy": "always",
              "settings": {
                "image": "${MODULES.DataParser}",
                "createOptions": {}
              }
            },
            "MongoModule": {
              "version": "1.0",
              "type": "docker",
              "status": "running",
              "restartPolicy": "always",
              "env": {
                "MONGO_DATABASE": {
                  "value": "$MONGO_INITDB_DATABASE"
                },
                "MONGO_USERNAME": {
                  "value": "$MONGO_INITDB_ROOT_USERNAME"
                },
                "MONGO_PASSWORD": {
                  "value": "$MONGO_INITDB_ROOT_PASSWORD"
                },
                "MONGO_ADDRESS": {
                  "value": "$MONGO_ADDRESS"
                },
                "MONGO_PORT": {
                  "value": "$MONGO_PORT"
                }
              },
              "settings": {
                "image": "${MODULES.MongoModule}",
                "createOptions": {
                  "NetworkingConfig": {
                    "EndpointsConfig": {
                      "host": {}
                    }
                  },
                  "HostConfig": {
                    "NetworkMode": "host",
                    "PortBindings": {
                      "27017/tcp": [
                        {
                          "HostPort": "27017"
                        }
                      ]
                    },
                    "Binds": [
                      "/data/logs:/app/logs/"
                    ]
                  },
                  "Mounts": [
                    {
                      "Type": "bind",
                      "Source": "/data/logs",
                      "Destination": "/app/logs/",
                      "Mode": "",
                      "RW": true,
                      "Propagation": "rprivate"
                    }
                  ]
                }
              }
            },
            "MongoLocal": {
              "version": "1.0",
              "type": "docker",
              "status": "running",
              "restartPolicy": "always",
              "env": {
                "MONGO_INITDB_DATABASE": {
                  "value": "$MONGO_INITDB_DATABASE"
                },
                "MONGO_INITDB_ROOT_USERNAME": {
                  "value": "$MONGO_INITDB_ROOT_USERNAME"
                },
                "MONGO_INITDB_ROOT_PASSWORD": {
                  "value": "$MONGO_INITDB_ROOT_PASSWORD"
                }
              },
              "settings": {
                "image": "mongo",
                "createOptions": {
                  "NetworkingConfig": {
                    "EndpointsConfig": {
                      "host": {}
                    }
                  },
                  "HostConfig": {
                    "NetworkMode": "host",
                    "PortBindings": {
                      "27017/tcp": [
                        {
                          "HostPort": "27017"
                        }
                      ]
                    },
                    "Binds": [
                      "/data/db:/data/db"
                    ]
                  },
                  "Mounts": [
                    {
                      "Type": "bind",
                      "Source": "/data/db",
                      "Destination": "/data/db",
                      "Mode": "",
                      "RW": true,
                      "Propagation": "rprivate"
                    }
                  ]
                }
              }
            },
            "DataUpdater": {
              "version": "1.0",
              "type": "docker",
              "status": "running",
              "restartPolicy": "always",
              "settings": {
                "image": "${MODULES.SmartFactoryDataUpdater}",
                "createOptions": {
                  "NetworkingConfig": {
                    "EndpointsConfig": {
                      "host": {}
                    }
                  },
                  "HostConfig": {
                    "NetworkMode": "host",
                    "Binds": [
                      "/iiotedge:/appdata"
                    ]
                  },
                  "Mounts": [
                    {
                      "Type": "bind",
                      "Source": "/iiotedge",
                      "Destination": "/appdata",
                      "Mode": "",
                      "RW": true,
                      "Propagation": "rprivate"
                    }
                  ]
                }
              }
            },
            "OPCPublisher": {
              "version": "1.0",
              "type": "docker",
              "status": "running",
              "restartPolicy": "always",
              "settings": {
                "image": "mcr.microsoft.com/iotedge/opc-publisher:$OPCPUBLISHER_VERSION",
                "createOptions": {
                  "Hostname": "publisher",
                  "Cmd": [
                    "publisher",
                    "--pf=/appdata/pn.json",
                    "--aa",
                    "--si=1",
                    "--ms=0"
                  ],
                  "HostConfig": {
                    "PortBindings": {
                      "62222/tcp": [
                        {
                          "HostPort": "62222"
                        }
                      ]
                    },
                    "Binds": [
                      "/iiotedge:/appdata"
                    ],
                    "ExtraHosts": [
                      "localhost:127.0.0.1"
                    ]
                  }
                }
              }
            },
            "OPCAdmin": {
              "version": "1.0",
              "type": "docker",
              "status": "running",
              "restartPolicy": "always",
              "settings": {
                "image": "${MODULES.OPCAdmin}",
                "createOptions": {
                  "NetworkingConfig": {
                    "EndpointsConfig": {
                      "host": {}
                    }
                  },
                  "HostConfig": {
                    "NetworkMode": "host"
                  }
                }
              }
            },
            "DataProcessing": {
              "version": "1.0",
              "type": "docker",
              "status": "running",
              "restartPolicy": "always",
              "settings": {
                "image": "${MODULES.DataProcessing}",
                "createOptions": {
                  "NetworkingConfig": {
                    "EndpointsConfig": {
                      "host": {}
                    }
                  },
                  "HostConfig": {
                    "NetworkMode": "host",
                    "PortBindings": {
                      "27017/tcp": [
                        {
                          "HostPort": "27017"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "$edgeHub": {
        "properties.desired": {
          "schemaVersion": "1.0",
          "routes": {
            "DataParserToIoTHub": "FROM /messages/modules/DataParser/outputs/output1 INTO BrokeredEndpoint(\"/modules/DataProcessing/inputs/publisher\")",
            "OPCPublisherToDataParser": "FROM /messages/modules/OPCPublisher/* INTO BrokeredEndpoint(\"/modules/DataParser/inputs/publisher\")",
            "DataParserToMongoModule": "FROM /messages/modules/OPCPublisher/storageOutput INTO BrokeredEndpoint(\"/modules/MongoModule/inputs/parser\")",
            "DataProcessingToIoTHub": "FROM /messages/modules/DataProcessing/outputs/output1 INTO $upstream",
            "DataProcessingToDataUpdater": "FROM /messages/modules/DataProcessing/outputs/outputUpdater INTO BrokeredEndpoint(\"/modules/DataUpdater/inputs/edgeUpdate\")"
          },
          "storeAndForwardConfiguration": {
            "timeToLiveSecs": 7200
          }
        }
      }
    }
  }